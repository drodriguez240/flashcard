steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
        npm
      path: $(NPM_CONFIG_CACHE)
    displayName: Cache npm

  - task: Cache@2
    inputs:
      key: electron | $(Agent.OS)
      path: $(ELECTRON_CACHE)
    displayName: Cache Electron
    condition: not(eq(variables['Agent.OS'], 'Darwin'))

  - task: Cache@2
    inputs:
      key: electronbuilder | $(Agent.OS)
      path: $(ELECTRON_BUILDER_CACHE)
    displayName: Cache Electron builder
    condition: not(eq(variables['Agent.OS'], 'Darwin'))
  
  - script: |
      npm ci
    displayName: 'npm ci'

  - script: |
      npm run dist
    displayName: 'npm run dist - Create executable'

  - task: CopyFiles@2
    inputs:
      contents: '?(*.exe|*.AppImage|*.dmg)' 
      sourceFolder: '$(Build.SourcesDirectory)/dist'
      targetFolder: $(Build.ArtifactStagingDirectory)
    displayName: 'Copy executable to staging directory'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: $(Build.ArtifactStagingDirectory)
      artifactName: 'LazyCard'
    displayName: 'Publish LazyCard from build $(Build.BuildNumber)'